#python 类
#类
#类属性 函数（第一个参数必须是self） self就是实例本身
#__dict__ 属性列表  __class__对象类型   __name__全局属性，当前模块名

#类方法  def 函数名(cls):     cls 类对象本身   无法通过cls操作类的实例


# @classmethod 类方法 内建函数，装饰器内部获取了类型信息，并绑定这个类型；实例和类都可以访问
# @staticmethod 静态方法  装饰器，内建函数；类访问 没有绑定。实例访问 也没绑定；不会注入第一参数；

#访问控制
#私有属性： __属性名； 访问：使用方法访问 return self.__属性  对象._当前类_私有成员
#私有访问    少用
#保护成员，_属性名。在类外可直接访问；；python中没有什么属性是访问不到的。

#补丁 修改或替换类成员，调用方式没变，功能可能变了
#猴子补丁 在运行时，动态替换。 慎用
'''
from 1 import 1类、方法
from 2 import 2类、方法
def 补丁():
    1类.方法=2类、方法 #修改1类
补丁()   #调用

if __name__=="main":
执行调用
'''

#属性装饰器
#好的设计：把实例的某些属性保护起来i，不让外部直接访问，外部使用getter读取属性，setter方法设置属性。

